function [ANALYSIS_LAB,ANALYSIS_DATE,SAMPLE_TYPE,SAMPLE_ID,DEPTH_CORE,CKHA,CK90,CKVA,CPOR,SOC,SWC,CDEN,SAMPLE_WT,CPOR_HUM,SOC_HUM,SWC_HUM,CDEN_HUM,CLAY_FACTOR,LITH,METHOD,PRESSAPPL,DRYTEMP,SLEEVE_TYPE,DRILLFLD,COMMENTS] = conventionalPlugDataImport(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [ANALYSIS_LAB,ANALYSIS_DATE,SAMPLE_TYPE,SAMPLE_ID,DEPTH_CORE,CKHA,CK90,CKVA,CPOR,SOC,SWC,CDEN,SAMPLE_WT,CPOR_HUM,SOC_HUM,SWC_HUM,CDEN_HUM,CLAY_FACTOR,LITH,METHOD,PRESSAPPL,DRYTEMP,SLEEVE_TYPE,DRILLFLD,COMMENTS]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [ANALYSIS_LAB,ANALYSIS_DATE,SAMPLE_TYPE,SAMPLE_ID,DEPTH_CORE,CKHA,CK90,CKVA,CPOR,SOC,SWC,CDEN,SAMPLE_WT,CPOR_HUM,SOC_HUM,SWC_HUM,CDEN_HUM,CLAY_FACTOR,LITH,METHOD,PRESSAPPL,DRYTEMP,SLEEVE_TYPE,DRILLFLD,COMMENTS]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [ANALYSIS_LAB,ANALYSIS_DATE,SAMPLE_TYPE,SAMPLE_ID,DEPTH_CORE,CKHA,CK90,CKVA,CPOR,SOC,SWC,CDEN,SAMPLE_WT,CPOR_HUM,SOC_HUM,SWC_HUM,CDEN_HUM,CLAY_FACTOR,LITH,METHOD,PRESSAPPL,DRYTEMP,SLEEVE_TYPE,DRILLFLD,COMMENTS]
%   = importfile('BasicCorePlugInputs.txt',4, 124);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/02/19 11:06:48

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 4;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: text (%s)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: text (%s)
%	column8: text (%s)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: text (%s)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: text (%s)
%	column20: text (%s)
%   column21: double (%f)
%	column22: double (%f)
%   column23: text (%s)
%	column24: text (%s)
%   column25: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%f%f%f%s%s%f%f%f%f%s%f%f%f%f%f%s%s%f%f%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ANALYSIS_LAB = dataArray{:, 1};
ANALYSIS_DATE = dataArray{:, 2};
SAMPLE_TYPE = dataArray{:, 3};
SAMPLE_ID = dataArray{:, 4};
DEPTH_CORE = dataArray{:, 5};
CKHA = dataArray{:, 6};
CK90 = dataArray{:, 7};
CKVA = dataArray{:, 8};
CPOR = dataArray{:, 9};
SOC = dataArray{:, 10};
SWC = dataArray{:, 11};
CDEN = dataArray{:, 12};
SAMPLE_WT = dataArray{:, 13};
CPOR_HUM = dataArray{:, 14};
SOC_HUM = dataArray{:, 15};
SWC_HUM = dataArray{:, 16};
CDEN_HUM = dataArray{:, 17};
CLAY_FACTOR = dataArray{:, 18};
LITH = dataArray{:, 19};
METHOD = dataArray{:, 20};
PRESSAPPL = dataArray{:, 21};
DRYTEMP = dataArray{:, 22};
SLEEVE_TYPE = dataArray{:, 23};
DRILLFLD = dataArray{:, 24};
COMMENTS = dataArray{:, 25};


