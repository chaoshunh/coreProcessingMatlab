function [Project,Well,Name,ImageType,LightType,TopDepth,BottomDepth,ImageUnit,TypeDescription,ResolutionDescription,Resolutions,ImageZoom,Created,Modified] = importCorePhotoCSV(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [PROJECT,WELL,NAME,IMAGETYPE,LIGHTTYPE,TOPDEPTH,BOTTOMDEPTH,IMAGEUNIT,TYPEDESCRIPTION,RESOLUTIONDESCRIPTION,RESOLUTIONS,IMAGEZOOM,CREATED,MODIFIED]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [PROJECT,WELL,NAME,IMAGETYPE,LIGHTTYPE,TOPDEPTH,BOTTOMDEPTH,IMAGEUNIT,TYPEDESCRIPTION,RESOLUTIONDESCRIPTION,RESOLUTIONS,IMAGEZOOM,CREATED,MODIFIED]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Project,Well,Name,ImageType,LightType,TopDepth,BottomDepth,ImageUnit,TypeDescription,ResolutionDescription,Resolutions,ImageZoom,Created,Modified]
%   = importfile('363X-16R, core image, UV@166.38 Core 1.csv',2, 2);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/03/02 14:04:21

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
%	column6: double (%f)
%   column7: double (%f)
%	column8: text (%s)
%   column9: text (%s)
%	column10: text (%s)
%   column11: double (%f)
%	column12: double (%f)
%   column13: text (%s)
%	column14: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%s%s%s%f%f%s%s%s%f%f%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Project = dataArray{:, 1};
Well = dataArray{:, 2};
Name = dataArray{:, 3};
ImageType = dataArray{:, 4};
LightType = dataArray{:, 5};
TopDepth = dataArray{:, 6};
BottomDepth = dataArray{:, 7};
ImageUnit = dataArray{:, 8};
TypeDescription = dataArray{:, 9};
ResolutionDescription = dataArray{:, 10};
Resolutions = dataArray{:, 11};
ImageZoom = dataArray{:, 12};
Created = dataArray{:, 13};
Modified = dataArray{:, 14};


